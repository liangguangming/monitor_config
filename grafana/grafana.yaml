apiVersion: v1
kind: Service
metadata:
  labels:
    kubernetes.io/cluster-service: 'true'
    kubernetes.io/name: grafana
  name: grafana
  namespace: monitoring
spec:
  ports:
  - port: 3000
    targetPort: 3000
  selector:
    k8s-app: grafana
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  template:
    metadata:
      labels:
        task: monitoring
        k8s-app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
          protocol: TCP
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 120Mi
        env:
        - name: GF_SERVER_HTTP_PORT
          value: "3000"
        - name: GF_AUTH_BASIC_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "false"
        - name: GF_SERVER_ROOT_URL
          value: /
        - name: GF_SMTP_ENABLED
          value: "true"
        - name: GF_SMTP_SKIP_VERIFY
          value: "true"
        - name: GF_SMTP_HOST
          value: smtp.exmail.qq.com:465
        - name: GF_SMTP_USER
          value: gmliang@nradiowifi.com
        - name: GF_SMTP_PASSWORD
          value: 940230Aa,
        - name: GF_SMTP_FROM_ADDRESS
          value: gmliang@nradiowifi.com
        - name: GF_ALERTING_ENABLED
          value: "true"
        - name: GF_ALERTING_EXECUTE_ALERTS
          value: "true"
        - name: GF_INSTALL_PLUGINS
          value: "grafana-kubernetes-app"
        readinessProbe:
          httpGet:
            path: /login
            port: 3000
          initialDelaySeconds: 30
          timeoutSeconds: 2
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-storage
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: monitoring
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    cert-manager.io/issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - grafana.nradiowifi.com
    secretName: grafana
  rules:
    - host: grafana.nradiowifi.com
      http:
        paths:
          - backend:
              serviceName: grafana
              servicePort: 3000
            path: /
---